name: Auto-Tag and Build

on:
  push:
    branches:
      - master
      - main

jobs:
  check-changes:
    name: Check Changes
    runs-on: ubuntu-latest
    outputs:
      skipped:  ${{ steps.changelog.outputs.skipped }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check Changes
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ secrets.github_token }}
          skip-git-pull: true
          version-file: "./Cargo.toml"
          version-path: "package.version"
          fallback-version: "0.1.0"
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          generate_release_notes: false
          draft: true

  build-linux:
    name: Build Linux Modules
    runs-on: ubuntu-latest
    needs: [check-changes]
    if: ${{ needs.check-changes.outputs.skipped == 'false' }}
    strategy:
      fail-fast: false
      matrix:
        platform: [linux]
        architecture: [32, 64]
        realm: [cl, sv]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch Toolchain Information
        run: node build/get-toolchain.js
        id: toolchain
        env:
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.architecture }}
          REALM: ${{ matrix.realm }}
      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ steps.toolchain.outputs.toolchain }}
          override: true
      - name: Setup Multilib
        if: ${{ matrix.architecture == 32 }}
        run: sudo apt-get install -y gcc-multilib
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --release ${{ steps.toolchain.outputs.features }} --target ${{ steps.toolchain.outputs.toolchain }}
      - name: Strip Debug Symbols
        run: strip target/${{ steps.toolchain.outputs.toolchain }}/release/libgm_sysinfo.so
      - name: Take Stock
        run: pwd && ls && ls target/${{ steps.toolchain.outputs.toolchain }}/**
      - name: Rename Outputs
        run: mv target/${{ steps.toolchain.outputs.toolchain }}/release/libgm_sysinfo.so  ${{ steps.toolchain.outputs.file }}
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          files: ${{ steps.toolchain.outputs.file }}

  build-windows:
    runs-on: windows-latest
    name: Build Windows Modules
    needs: [check-changes]
    if: ${{ needs.check-changes.outputs.skipped == 'false' }}
    strategy:
      fail-fast: false
      matrix:
        platform: [win]
        architecture: [32, 64]
        realm: [cl, sv]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch Toolchain Information
        run: node build/get-toolchain.js
        id: toolchain
        env:
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.architecture }}
          REALM: ${{ matrix.realm }}
      - name: Setup Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ steps.toolchain.outputs.toolchain }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: false
          command: build
          args: --release ${{ steps.toolchain.outputs.features }} --target ${{ steps.toolchain.outputs.toolchain }}
      - name: Take Stock
        run: ls target/${{ steps.toolchain.outputs.toolchain }}/release/
      - name: Rename Outputs
        run: mv target/${{ steps.toolchain.outputs.toolchain }}/release/libgm_sysinfo.dll  ${{ steps.toolchain.outputs.file }}
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          files: ${{ steps.toolchain.outputs.file }}

